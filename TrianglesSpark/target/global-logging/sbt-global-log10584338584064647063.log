[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\havri\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\havri\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.5 (Azul Systems, Inc. Java 11.0.23)
[debug] Load.defaultLoad until apply took 75.254ms
[debug]           Load.loadUnit: plugins took 62.839ms
[debug]           Load.loadUnit: defsScala took 0.1958ms
[debug] [Loading] Scanning directory C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark\project
[debug]             Load.loadUnit: mkEval took 6.9887ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.5652 ms
[info] loading settings for project trianglesspark-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(trianglesspark-build) took 56.5484ms
[debug]             Load.loadTransitive: finalizeProject(Project(id trianglesspark-build, base: C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark\project, plugins: List(<none>))) took 84.3737ms
[debug] [Loading] Done in C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark\project, returning: (trianglesspark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2282.7489ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.4872ms
[debug]         Load.loadUnit(file:/C:/Users/havri/Programming/University/concurrency/spark-triangles-scala/TrianglesSpark/project/, ...) took 2357.6283ms
[debug]       Load.apply: load took 2522.4741ms
[debug]       Load.apply: resolveProjects took 6.7185ms
[debug]       Load.apply: finalTransforms took 66.4007ms
[debug]       Load.apply: config.delegates took 14.6048ms
[debug]       Load.apply: Def.make(settings)... took 401.594ms
[debug]       Load.apply: structureIndex took 93.7225ms
[debug]       Load.apply: mkStreams took 2.4791ms
[info] loading project definition from C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6216.5282ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark
[debug]       Load.loadUnit: mkEval took 0.2767ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalafmt.sbt.ScalafmtPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalafmt.sbt.ScalafmtPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.scalafmt.sbt.ScalafmtPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.9438 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.5775ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark, plugins: List(<none>))) took 30.4632ms
[debug] [Loading] Done in C:\Users\havri\Programming\University\concurrency\spark-triangles-scala\TrianglesSpark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1331.8822ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.839ms
[debug]   Load.loadUnit(file:/C:/Users/havri/Programming/University/concurrency/spark-triangles-scala/TrianglesSpark/, ...) took 7555.6323ms
[debug] Load.apply: load took 7568.4241ms
[debug] Load.apply: resolveProjects took 0.1819ms
[debug] Load.apply: finalTransforms took 28.688ms
[debug] Load.apply: config.delegates took 0.2653ms
[debug] Load.apply: Def.make(settings)... took 97.9886ms
[debug] Load.apply: structureIndex took 23.8368ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to Lab-4 (in build file:/C:/Users/havri/Programming/University/concurrency/spark-triangles-scala/TrianglesSpark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52117 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52117, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Lab-4 (in build file:/C:/Users/havri/Programming/University/concurrency/spark-triangles-scala/TrianglesSpark/)
[debug] > Exec(idea-shell, None, None)
